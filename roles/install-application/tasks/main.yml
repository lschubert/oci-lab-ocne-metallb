---
- name: Copy Application Configuration File
  copy:
    src: files/echo-oci-lb.yml
    dest: ${HOME}/echo-oci-lb.yml
  become: true
  become_user: "{{ install_user }}"
- name: Check LB Service
  shell: |
    kubectl get svc echo-lb-service
  become: true
  become_user: "{{ install_user }}"
  register: lb_svc_result
- name: Create LB Service
  shell: |
    kubectl create -f ${HOME}/echo-oci-lb.yml
  become: true
  become_user: "{{ install_user }}"
  register: kubectl_create_app
  when: lb_svc_result.rc == 1
- name: DEBUG output
  debug:
    var: kubectl_create_app
  when: debug_output == true
- name: Gather deployment 
  shell: |
    kubectl get deployment
  become: true
  become_user: "{{ install_user }}"
  register: kubectl_get_deployment
- name: DEBUG output
  debug:
    var: kubectl_get_deployment
  when: debug_output == true
- name: Gather service
  shell: |
    kubectl get svc
  become: true
  become_user: "{{ install_user }}"
  register: kubectl_get_svc
- name: DEBUG output
  debug:
    var: kubectl_get_svc
  when: debug_output == true
- name: Capture Loadbalancer IP address
  shell: |
    kubectl get svc -o jsonpath="{.status.loadBalancer.ingress[0].ip}" echo-lb-service
  become: true
  become_user: "{{ install_user }}"
  register: external_ip_result
- name: Capture Loadbalancer Port
  shell: |
    kubectl get svc -o jsonpath="{.spec.ports[0].port}" echo-lb-service
  become: true
  become_user: "{{ install_user }}"
  register: lb_port_result
- name: Set facts
  set_fact:
    lb_ip: "{{ external_ip_result.stdout }}"
    lb_port: "{{ lb_port_result.stdout }}"
    